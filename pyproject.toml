[project]
name = "flair-brookslab"
version = "2.1.0"
description = "FLAIR is a long-read transcriptomics model building and analysis package"
authors = [
    {name = "Angela Brooks", email = "anbrooks@ucsc.edu"},
    {name = "Alison Tang"},
    {name = "Jeltje van Baren", email = "jeltje.van.baren@gmail.com"},
    {name = "Colette Felton", email = "cafelton@ucsc.edu"},
    {name = "Cameron M. Soulette"},
    {name = "Mark Diekhans", email = "markd@ucsc.edu"}
]
license = {text = "BSD 3-clause"}
readme = "README.md"
requires-python = ">=3.12,<3.13"

dependencies = [
    "pysam (>=0.22.1,<0.23.0)",
    "pipettor (>=1.0.0,<2.0.0)",
    "pybedtools (>=0.11.0,<0.12.0)",
    "ncls (>=0.0.68,<0.0.69)",
    "setuptools (>=75.8.0,<76.0.0)",
    "mappy (>=2.28,<3.0)",
    "numpy (>=2.2,<3.0)",
    "scipy (>=1.15.1,<2.0.0)",
]

[project.optional-dependencies]
dev = [
    "flake8 (>=7.1.1)",
    "sphinx (>=8.2.3,<9.0.0)",
    "sphinx-rtd-theme (>=3.0.2)",
    "bump-my-version (>=1.1.1)",
]
diffexp = [
    "pandas (>=2.2.3,<3.0.0)",
    "matplotlib (>=3.10.0,<4.0.0)",
    "seaborn (>=0.13.2,<0.14.0)",
    "rpy2 (>=3.5.17,<4.0.0)",
]

[project.urls]
homepage = "https://flair.readthedocs.io/en/latest/"
documentation = "https://flair.readthedocs.io/en/latest/"
repository = "https://github.com/BrooksLabUCSC/flair/"

[project.scripts]
flair = "flair.flair_cli:main"

# these are needed for pip install
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

## 
# poetry specific
##

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [
    { include = "flair", from = "src"},
]
        
[tool.poetry.scripts]
assign_variants_to_transcripts = { reference = "bin/assign_variants_to_transcripts", type = "file" }
junctions_from_sam = { reference = "bin/junctions_from_sam", type = "file" }
mark_intron_retention = { reference = "bin/mark_intron_retention", type = "file" }
mark_productivity = { reference = "bin/mark_productivity", type = "file" }
normalize_counts_matrix = { reference = "bin/normalize_counts_matrix", type = "file" }
bam2Bed12 = { reference = "bin/bam2Bed12", type = "file" }
plot_isoform_usage = { reference = "bin/plot_isoform_usage", type = "file" }
predictProductivity = { reference = "bin/predictProductivity", type = "file" }
sam_to_map = { reference = "bin/sam_to_map", type = "file" }
fasta_seq_lengths = { reference = "bin/fasta_seq_lengths", type = "file" }
gtf_to_bed = { reference = "bin/gtf_to_bed", type = "file" }
bed_to_sequence = { reference = "bin/bed_to_sequence", type = "file" }
identify_annotated_gene = { reference = "bin/identify_annotated_gene", type = "file" }
identify_gene_isoform = { reference = "bin/identify_gene_isoform", type = "file" }
diff_iso_usage = { reference = "bin/diff_iso_usage", type = "file" }
diffsplice_fishers_exact = { reference = "bin/diffsplice_fishers_exact", type = "file" }
flair_combine = { reference = "bin/flair_combine", type = "file" }
bed_to_gtf = { reference = "bin/bed_to_gtf", type = "file" }
